---
title: "Assignment 9 Solutions: Fitting models to your dataframe"
---

<span style="color:#9F281A;">1. Use the variables that you chose from assignment 6 along with the wildfire hazard and land use dataset to attribute each disaster in the disaster dataset.</span>


```{r}
#| label: loadata
#| eval: false

library(sf)
library(tidyverse, quietly = TRUE)
library(terra)
library(tmap, quietly = TRUE)
library(caret)

 download_unzip_read <- function(link){
  tmp <- tempfile()
  download.file(link, tmp)
  tmp2 <- tempfile()
  unzip(zipfile=tmp, exdir=tmp2)
  shapefile.sf <- read_sf(tmp2)
  }


cejst.pnw <- read_sf("data/opt/data/2023/assignment07/cejst_pnw.shp")%>% 
  filter(., !st_is_empty(.))

incidents.csv <- read_csv("data/opt/data/2023/assignment07/ics209-plus-wf_incidents_1999to2020.csv")

land.use <- rast("data/opt/data/2023/assignment07/land_use_pnw.tif")
fire.haz <- rast("data/opt/data/2023/assignment07/wildfire_hazard_agg.tif")


fire.haz.proj <- project(fire.haz, land.use)


cejst.proj <- cejst.pnw %>% 
  st_transform(., crs=crs(land.use))

incidents.proj <- incidents.csv %>% 
  filter(., !is.na(POO_LONGITUDE) | !is.na(POO_LATITUDE) ) %>% 
  st_as_sf(., coords = c("POO_LONGITUDE", "POO_LATITUDE"), crs= 4269) %>% 
  st_transform(., crs=crs(land.use))
incidents.pnw <- st_crop(incidents.proj, st_bbox(cejst.proj))

hazard.smooth <- focal(fire.haz.proj, w=5, fun="mean")
land.use.smooth <- focal(land.use, w=5, fun="modal")
levels(land.use.smooth) <- levels(land.use)

cejst.select <- cejst.proj %>% 
  select(., c(TPF, HBF_PFS, P200_I_PFS))

incident.cejst <- incidents.pnw %>% 
  st_join(., y=cejst.select, join=st_within) 

incident.landuse.ext <- terra::extract(x=land.use.smooth, y = vect(incident.cejst), fun="modal", na.rm=TRUE)

incident.firehaz.ext <- terra::extract(x= hazard.smooth, y = vect(incident.cejst), fun="mean", na.rm=TRUE)

incident.cejst.join <- cbind(incident.cejst,incident.landuse.ext$category, incident.firehaz.ext$focal_mean) %>% 
  rename(category = "incident.landuse.ext.category", hazard = "incident.firehaz.ext.focal_mean")

incident.cejst.model <- incident.cejst.join %>% 
  select(., PROJECTED_FINAL_IM_COST, TPF, HBF_PFS, P200_I_PFS, hazard, category,) %>% 
  st_drop_geometry(.) %>% 
  filter(., complete.cases(.)) %>% 
  mutate(across(TPF:hazard, ~ scale(.x)),
         category = as.character(category),
         cost = as.integer(floor(PROJECTED_FINAL_IM_COST))) %>% 
  select(-PROJECTED_FINAL_IM_COST)
```


<span style="color:#9F281A;">2. Fit a Poisson regression using your covariates and the cost of the incident data (using `glm` with `family=poisson()`)</span>
```{r}
#| eval: false

set.seed(998)
inTraining <- createDataPartition(incident.cejst.model$category, p = .75, list = FALSE)
training <- incident.cejst.model[ inTraining,]
testing  <- incident.cejst.model[-inTraining,]

fitControl <- trainControl(## 10-fold CV
                           method = "repeatedcv",
                           number = 10,
                           ## repeated ten times
                           repeats = 10)

PoisFit <- train( cost ~ ., data = training, 
                 method = "glm", 
                 family = poisson,
                 trControl = fitControl
                 )
```


<span style="color:#9F281A;">3. Fit a regression tree using your covariates and the cost of the incident data (using `caret` package `method=`rpart`)</span>

```{r}
#| eval: false

RtFit <- train( cost ~ ., data = training, 
                 method = "rpart",
                  parms=list(method="poisson"),
                 trControl = fitControl
                 )

```

<span style="color:#9F281A;">4. Fit a random forest model using your covariates and the cost of the incident data (using `caret` package `method= 'rf'`)</span>
```{r}
#| eval: false
RFFit <- train( cost ~ ., data = training, 
                 method = "rf",
                 trControl = fitControl
                 )

```


<span style="color:#9F281A;">5. Use cross-validation to identify the best performing model of the 3 that you fit</span>

<span style="color:#9F281A;">6. Convert all of your predictors into rasters of the same resolution and generate a spatial prediction based on your model</span>

<span style="color:#9F281A;">7. Plot your result</span>
