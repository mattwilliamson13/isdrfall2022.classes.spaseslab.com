{
  "hash": "cdbc57831454e92cf9a26e5e35ecccd3",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Spatial Data\"\nsubtitle: \"HES 505 Fall 2023: Session 3\"\nauthor: \"Matt Williamson\"\nformat: \n  revealjs:\n    theme: mytheme.scss\n    slide-number: true\n    show-slide-number: print\n    self-contained: true  \n---\n\n\n## Today's Plan {background-image=\"img/slide_3/sweden.png\" background-opacity=\"0.8\"}\n\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 1em; color:#fff\"}\n\n1. Ways to view the world\n\n2. What makes data (geo)spatial?\n\n3. Coordinate Reference Systems\n\n4. Geometries, support, and spatial messiness\n\n:::\n\n# {background=\"#9F281A\"}\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nHow do you view the world?\n:::\n\n\n## ...As a Series of **Objects**?\n\n::: columns\n::: {.column width=\"50%\"}\n::: incremental\n- The world is a series of _entities_ located in space.\n\n- Usually distinguishable, discrete, and bounded\n\n- Some spaces can hold multiple entities, others are empty\n\n- Objects are digital representations of entities\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](img/slide_3/bench.jpg)\n:::\n:::\n\n## ...As a Continuous Field\n\n::: columns\n::: {.column width=\"50%\"}\n::: incremental\n- The earth is a single entity with properties that vary continuosly through space\n\n- Spatial continuity: Every cell has a value (including \"no data\" or \"not here\")\n\n- Self-definition: the values define the field \n\n- Space is tessellated: cells are mutually exclusive\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](img/slide_3/LIDAR.png)\n:::\n:::\n\n# {background=\"#9F281A\"}\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nHow did the data arise?\n:::\n\n## Spatial data as a stochastic process\n\n\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2.5em\"}\n\n$$\n{Z(\\mathbf{s}): \\mathbf{s} \\in D \\subset \\mathbb{R}^d}\n$$\n:::\n\n## Areal Data\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 1em\"}\n$$\n{Z(\\mathbf{s}): \\mathbf{s} \\in D \\subset \\mathbb{R}^d}\n$$\n:::\n\n::: columns\n::: {.column width=\"40%\"}\n- $D$ is fixed domain of countable units\n\n- Typically involve some aggregation\n\n:::\n::: {.column width=\"60%\"}\n\n::: {.cell hash='03-slides_cache/revealjs/unnamed-chunk-1_644d031c51ecbe07d0f9b9ec670541ea'}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Geostatistical data\n\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 1em\"}\n$$\n{Z(\\mathbf{s}): \\mathbf{s} \\in D \\subset \\mathbb{R}^d}\n$$\n:::\n\n::: columns\n::: {.column width=\"60%\"}\n![Mitzi Morris](img/slide_3/mitzi_bikeinjury.jpg)\n:::\n::: {.column width=\"40%\"}\n- $D$ is a fixed subset of $\\mathbb{R}^d$ \n\n- $Z(\\mathbf{s})$ could be observed at any location within $D$.\n\n- Models predict unobserved locations\n:::\n:::\n\n## Point patterns\n\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: -1em; margin-bottom: -1.25em\"}\n$$\n{Z(\\mathbf{s}): \\mathbf{s} \\in D \\subset \\mathbb{R}^d}\n$$\n:::\n\n- $D$ is random; where $\\mathbf{s}$ depicts the location of events\n\n![](img/slide_3/Ben-Said.png)\n\n::: footer \n:::{style=\"font-size: 0.8em; margin-bottom: -1.5em; color:#fff\"}\nBen-Said, M. Ecol Process 10, 56 (2021). \n:::\n:::\n\n# {background=\"#9F281A\"}\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nHow is the data stored?\n:::\n\n## What is a data model?\n\n::: {.incremental}\n- **Data:** a collection of discrete values that describe phenomena\n\n- Your brain stores millions of pieces of data\n\n- Computers are not your brain\n  - Need to organize data systematically\n  - Be able to display and access efficiently\n  - Need to be able to store and access repeatedly\n\n- Data models solve this problem\n:::\n\n## 2 Types of Spatial Data Models\n\n - **Raster:** grid-cell tessellation of an area. Each raster describes the value of a single phenomenon. More next week... \n \n - **Vector:** (many) attributes associated with locations defined by coordinates\n \n## The Vector Data Model\n\n::: columns\n::: {.column width=\"60%\"}\n::: {style=\"font-size: 0.8em\"} \n- __Vertices__ (i.e., discrete x-y locations) define the shape of the vector\n\n- The organization of those vertices define the _shape_ of the vector\n\n- General types: points, lines, polygons\n:::\n:::\n::: {.column width=\"40%\"}\n![Image Source: Colin Williams (NEON)](img/slide_3/points-lines-polygons-vector-data-types.png)\n:::\n:::\n\n\n# {background-image=\"img/slide_3/landscape_geometry.jpeg\"}\n\n::: footer\nImage Source: QGIS User's manual\n:::\n\n## Vectors in Action {background-image=\"img/slide_3/landscape_geometry.jpeg\" background-opacity=\"0.5\"}\n\n::: {.incremental}\n* Useful for locations with discrete, well-defined boundaries\n\n* Very precise (not necessarily accurate)\n\n:::\n::: footer\nImage Source: QGIS User's manual\n:::\n\n## The Raster Data Model\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"font-size: 0.8em\"}\n* __Raster data__ represent spatially continuous phenomena (`NA` is possible)\n\n* Depict the alignment of data on a regular lattice (often a square)\n\n* Geometry is implicit; the spatial extent and number of rows and columns define the cell size\n\n:::\n:::\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-2-1.png){width=576}\n:::\n:::\n\n:::\n:::\n\n## Types of Raster Data\n\n::: columns\n:::{.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-3-1.png){width=576}\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n::: {style=\"font-size: 0.8em\"}\n* __Regular__: constant cell size; axes aligned with Easting and Northing\n\n* __Rotated__: constant cell size; axes not aligned with Easting and Northing\n\n* __Sheared__: constant cell size; axes not parallel\n\n* __Rectilinear__: cell size varies along a dimension\n\n* __Curvilinear__: cell size and orientation dependent on the other dimension\n\n:::\n:::\n:::\n\n## Types of Raster Data\n\n* __Continuous__: numeric data representing a measurement (e.g., elevation, precipitation)\n\n* __Categorical__: integer data representing factors (e.g., land use, land cover)\n\n::: columns\n:::{.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n# {background=\"#9F281A\"}\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nWhat makes data (geo)spatial?\n:::\n\n## Location vs. Place\n::: columns\n::: {.column width=\"50%\"}\n::: incremental\n::: {style=\"font-size: 0.8em\"}\n* **Place:** an area having unique **physical** and **human** characteristics **interconnected** with other places\n\n* **Location:** the actual position on the earth's surface\n\n* **Sense of Place:** the emotions someone attaches to an area based on experiences\n\n* Place is *location plus meaning*\n\n:::\n:::\n:::\n::: {.column width=\"50%\"}\n::: incremental\n- __nominal: (potentially contested) place names__\n\n- __absolute: the physical location on the earth's surface__\n:::\n:::\n:::\n\n## Describing Absolute Locations\n\n- **Coordinates:** 2 or more measurements that specify location relative to a _reference system_\n\n::: columns\n::: {.column width=\"60%\"}\n::: {style=\"font-size: 0.8em\"} \n- Cartesian coordinate system\n\n- _origin (O)_ = the point at which both measurement systems intersect\n\n- Adaptable to multiple dimensions (e.g. *z* for altitude)\n:::\n:::\n::: {.column width=\"40%\"}\n![Cartesian Coordinate System](img/slide_3/CartesianCoordinateSystem.png)\n:::\n:::\n\n## Locations on a Globe\n\n- The earth is not flat...\n\n\n![Latitude and Longitude](img/slide_6/Latitude_and_Longitude.png)\n\n## Locations on a Globe\n\n- The earth is not flat...\n\n- Global Reference Systems (GRS)\n\n- _Graticule_: the grid formed by the intersection of longitude and latitude\n\n- The graticule is based on an ellipsoid model of earth's surface and contained in the _datum_\n\n\n## Global Reference Systems\n::: {style=\"font-size: 1.2em; text-align: center\"}\n__The *datum* describes which ellipsoid to use and the precise relations between locations on earth's surface and Cartesian coordinates__\n:::\n\n- Geodetic datums (e.g., `WGS84`): distance from earth's center of gravity\n\n- Local data (e.g., `NAD83`): better models for local variation in earth's surface\n\n## Describing location: extent\n::: incremental\n- How much of the world does the data cover?\n\n- For rasters, these are the corners of the lattice\n\n- For vectors, we call this the bounding box\n:::\n\n## Describing location: resolution\n\n::: columns\n::: {.column width=\"40%\"}\n::: incremental\n-   **Resolution:** the accuracy that the location and shape of a map's features can be depicted\n\n-   **Minimum Mapping Unit:** The minimum size and dimensions that can be reliably represented at a given _map scale_. \n\n-   Map scale vs. scale of analysis\n:::\n:::\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n# {background=\"#9F281A\"}\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nThe earth is not flat...\n:::\n\n## Projections\n\n::: columns\n::: {.column width=\"60%\"}\n::: {style=\"font-size: 0.8em\"} \n- But maps, screens, and publications are...\n\n- **Projections** describe *how* the data should be translated to a flat surface\n\n- Rely on 'developable surfaces'\n\n- Described by the Coordinate Reference System (CRS)\n:::\n:::\n::: {.column width=\"40%\"}\n![Developable Surfaces](img/slide_3/projections.png)\n:::\n::: \n \n::: {style=\"font-size: 1.1em; text-align: center\"}\n[__Projection necessarily induces some form of distortion (tearing, compression, or shearing)__]{style=\"color:#771C6D\"}\n:::\n\n\n## Coordinate Reference Systems\n\n::: {style=\"font-size: 0.8em\"}\n\n-   Some projections minimize distortion of angle, area, or distance\n\n-   Others attempt to avoid extreme distortion of any kind \n\n-   Includes: Datum, ellipsoid, units, and other information (e.g., False Easting, Central Meridian) to further map the projection to the GCS\n\n-   Not all projections have/require all of the parameters\n:::\n\n\n::: {.cell hash='03-slides_cache/revealjs/unnamed-chunk-7_484835aa2370463981301e4a30de5520'}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n## Choosing Projections\n::: columns\n::: {.column width=\"40%\"}\n![](img/slide_3/distortion.png)\n:::\n::: {.column width=\"60%\"}\n\n- Equal-area for thematic maps\n\n- Conformal for presentations\n\n- Mercator or equidistant for navigation and distance\n\n:::\n:::\n\n# {background=\"#9F281A\"}\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nGeometries, support, and spatial messiness\n:::\n\n## Geometries\n\n::: columns\n::: {.column width=\"40%\"}\n-   Vectors store aggregate the locations of a feature into a geometry\n-   Most vector operations require simple, valid geometries\n:::\n::: {.column width=\"60%\"}\n![Image Source: Colin Williams (NEON)](img/slide_3/points-lines-polygons-vector-data-types.png)\n:::\n:::\n\n## Valid Geometries\n::: {style=\"font-size: 0.8em\"} \n-   A `linestring` is _simple_ if it does not intersect\n-   Valid polygons\n  -   Are closed (i.e., the last vertex equals the first)\n  -   Have holes (inner rings) that inside the the exterior boundary\n  -   Have holes that touch the exterior at no more than one vertex (they don't extend across a line)\n    -   For multipolygons, adjacent polygons touch only at points\n  -   Do not repeat their own path\n\n:::\n\n##\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-slides_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n## Empty Geometries\n\n* Empty geometries arise when an operation produces `NULL` outcomes (like looking for the intersection between two non-intersecting polygons)\n\n* `sf` allows empty geometries to make sure that information about the data type is retained\n\n* Similar to a `data.frame` with no rows or a `list` with `NULL` values\n\n* Most vector operations require simple, valid geometries\n\n\n## Support\n* __Support__ is the area to which an attribute applies.\n\n::: incremental\n\n*   For vectors, the attribute-geometry-relationship can be:\n  *   __constant__ = applies to every point in the geometry (lines and polygons are just lots of points)\n  *   __identity__ = a value unique to a geometry\n  *   __aggregate__ = a single value that integrates data across the geometry\n\n*   Rasters can have __point__ (attribute refers to the cell center) or __cell__ (attribute refers to an area similar to the pixel) support\n\n:::\n\n## Spatial Messiness\n\n* Quantitative geography requires that our data are aligned\n\n* Achieving alignment is part of reproducible workflows\n\n* Making principled decisions about projections, resolution, extent, etc\n\n# {background=\"#9F281A\"}\n\n:::{style=\"font-size: 1.4em; text-align: middle; margin-top: 2em\"}\nEnd\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}